---
const response = await fetch(
  "https://eu-central-1-shared-euc1-02.cdn.hygraph.com/content/clhzrm4dw2zt701ut4w9p35b8/master",
  {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Accept: "application/json",
    },
    body: JSON.stringify({
      query: `
        {
          links {
            name
            image
          }
        },
   
      `,
    }),
  }
);
const links = await response.json();
---

<section>
  <h2>Link Hover</h2>
  <div class="container">
    {
      links.data.links.map((link) => (
        <a href="#">
          <span>{link.name}</span>
          <div class="img-wrapper">
            <img src={link.image.url} alt={link.name} />
          </div>
        </a>
      ))
    }
  </div>
</section>

<style>
  section {
    min-height: 100vh;
    position: relative;
    background-color: #1b1b1b;
  }
  .container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    flex-direction: row;
  }

  .container a {
    text-decoration: none;
    text-transform: uppercase;
    color: rgb(184, 184, 184);
    mix-blend-mode: difference;
    position: relative;
    padding: 2em 0.4em;
    text-align: center;
  }

  .container > a:hover {
    color: white;
  }

  .container > a > span {
    position: relative;
    z-index: 2;
    width: 400px;
  }

  .container a .img-wrapper {
    position: absolute;
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.5);
    transition: all 250ms;
    pointer-events: none;
    width: 300px;
    height: 400px;
    overflow: hidden;
  }

  .container a img {
    position: absolute;
    opacity: 0;
    top: 0;
    left: 0;
    transform: scale(2.5);
    transition: transform 200ms cubic-bezier(0.075, 0.82, 0.165, 1),
      opacity 250ms;
    pointer-events: none;
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  .container a:hover .img-wrapper {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }

  .container a:hover img {
    opacity: 1;
    transform: scale(1.5);
  }
</style>

<script>
  const ctn = document.getElementsByClassName(".container");

  window.onmousemove = (e) => {
    const percent = e.clientX / window.innerWidth;

    ctn.animate({
      transform: `translateX(${percent * ctn.offsetWidth * -1})`,
    }, {
      fill: "forwards",
      duration: 4000,
    });
  };
</script>
